cmake_minimum_required(VERSION 3.5)
project(GMM)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14")
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)

INCLUDE_DIRECTORIES(./)
INCLUDE_DIRECTORIES(./src)

# fing opencv
find_package(OpenCV REQUIRED)
include_directories(${OpenCV_INCLUDE_DIRS})
link_directories(${OpenCV_LIBRARY_DIRS})
LINK_DIRECTORIES(${PROJECT_BINARY_DIR}/lib)

#set(PCL_DIR /usr/share/pcl-1.8)
find_package(PCL REQUIRED)
include_directories(${PCL_INCLUDE_DIRS})
link_directories(${PCL_LIBRARY_DIRS})
 
# Boost setting
find_package(Boost COMPONENTS program_options REQUIRED )
include_directories(${Boost_INCLUDE_DIRS})
link_directories(${Boost_LIBRARY_DIRS})

# pcl setting
include_directories(${PCL_INCLUDE_DIRS})
link_directories(${PCL_LIBRARY_DIRS})
add_definitions(${PCL_DEFINITIONS})

set(LIB_GMM_SOURCE
	./src/MOG_BGS.h
	./src/MOG_BGS.cpp)
add_library(gmm SHARED ${LIB_GMM_SOURCE})
target_link_libraries(gmm
	${OpenCV_LIBS} ${PCL_LIBRARIES} ${Boost_LIBRARIES})

set(LIB_GMM gmm)
add_executable(gmm_test ./src/main.cpp)
target_link_libraries(gmm_test
	${LIB_GMM})
